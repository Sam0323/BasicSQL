a) DISTINCT - DISTINCT keyword in SQL eliminates all duplicate records from the result returned by the SQL query. 
For example: if there is only Male and Female in Column table. It gives the result of 2. It does not count all the male and female inside the column.
SELECT DISTINCT(Gender)
FROM EmployeeDemographics

b) AS- The AS command is used to rename a column or table with an alias.
For example: SELECT o.OrderID, o.OrderDate, c.CustomerName
                FROM Customers AS c, Orders AS o
                WHERE c.CustomerName="Around the Horn" AND c.CustomerID=o.CustomerID;
                
c) WHERE: The WHERE clause is used to filter records.
FOR Example: SELECT * FROM Customers
                WHERE Country='Mexico';

d) LIKE: The LIKE operator is used in a WHERE clause to search for a specified pattern in a column.

There are two wildcards often used in conjunction with the LIKE operator:
    1. The percent sign (%) represents zero, one, or multiple characters
    2. The underscore sign (_) represents one, single character

LIKE Operator	Description
WHERE CustomerName LIKE 'a%'	Finds any values that start with "a"
WHERE CustomerName LIKE '%a'	Finds any values that end with "a"
WHERE CustomerName LIKE '%or%'	Finds any values that have "or" in any position
WHERE CustomerName LIKE '_r%'	Finds any values that have "r" in the second position
WHERE CustomerName LIKE 'a_%'	Finds any values that start with "a" and are at least 2 characters in length
WHERE CustomerName LIKE 'a__%'	Finds any values that start with "a" and are at least 3 characters in length
WHERE ContactName LIKE 'a%o'	Finds any values that start with "a" and ends with "o"
For Example: SELECT * FROM Customers
                WHERE CustomerName LIKE 'a%';

e) BETWEEN: The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates.
For Example: SELECT * FROM Products
                WHERE Price BETWEEN 10 AND 20;

f) AND & OR: The AND and OR operators are used to filter records based on more than one condition.
FOR EXAMPLE: SELECT * FROM Customers
                WHERE Country='Germany' AND City='Berlin';

g) ORDER BY: The ORDER BY keyword is used to sort the result-set in ascending or descending order.
FOR EXAMPLE: SELECT column1, column2, ...
                FROM table_name
                    ORDER BY column1, column2, ... ASC|DESC;

h) LIMIT: It is a clause that lets you specify the maximum number of rows the result set will have. 
FOR Example: SELECT column_name(s)
                FROM table_name
                WHERE condition
                LIMIT number;

i) CASE: The CASE expression goes through conditions and returns a value when the first condition is met (like an if-then-else statement).
So, once a condition is true, it will stop reading and return the result. If no conditions are true, it returns the value in the ELSE clause.
For Example: 
SELECT OrderID, Quantity,
CASE
    WHEN Quantity > 30 THEN 'The quantity is greater than 30'
    WHEN Quantity = 30 THEN 'The quantity is 30'
    ELSE 'The quantity is under 30'
END AS QuantityText
FROM OrderDetails;
